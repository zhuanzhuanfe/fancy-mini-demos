<template>
  <view>
    <view class="info">
      <view class="name">{{pageName}}</view>
      <view class="options" @tap="onOptions">options:\n{{pageOptionsStr}}</view>
    </view>
    <view class="entries">
      <button class="entry" wx:for="{{entries}}" wx:for-item="entry" wx:key="{{index}}" @tap="onEntry({{index}})">{{entry.txt}}</button>
    </view>
    <Introduction :intros.sync="intros"></Introduction>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import {appendUrlParam} from 'fancy-mini/lib/operationKit';
  import Introduction from '@/components/Introduction';

  export default class extends wepy.component {
    props = {
      pageName: {
        type: String
      },
      pageOptions: {
        type: Object
      },
    }

    data = {
      entries: [
        {
          txt: '打开A',
          href: '/pages/navigate/pageA',
        },
        {
          txt: '打开B',
          href: '/pages/navigate/pageB',
        },
        {
          txt: '打开C',
          href: '/pages/navigate/pageC',
        },
      ],
      intros: [
        {
          title: '体验：',
          content: `
             点击按钮打开新页面，会发现哪怕层级超过10层，依旧可以持续打开新页面；
             点击系统返回按钮，会发现页面按照打开顺序，正常逐层返回；
             页面顶部会显示页面标识和打开时间，用以区分不同页面。
           `,
        },
        {
          title: '解决问题：',
          content: `
             小程序原生页面存在层级限制，超过一定层数就会无法打开新页面。目前是不能超过10层。
             业务流程复杂/页面相互引用循环访问，很容易导致层级溢出，造成点击无响应。
           `,
          contentLayout: 'unorderedList',
        },
        {
          title: '功能：',
          content: `
             支持无限层级，避免层级较深时无法打开新页面；
             支持引入一些路由相关的扩展功能，如：免并发、数据预先加载、实例覆盖自动恢复等。
           `,
        },
      ],
    }

    computed = {
      pageOptionsStr(){
        return JSON.stringify(this.pageOptions, null, 2);
      }
    }

    methods = {
      onEntry(idx){
        let entry = this.entries[idx];
        this.$wxPromise.navigateTo({
          url: appendUrlParam(entry.href, {timestamp: Date.now()})
        });
      },
      onOptions(){
        wx.showModal({
          title: 'pageOptions',
          content: this.pageOptionsStr,
          showCancel: false,
        })
      },
    }

    components = {
      Introduction,
    }
  }
</script>

<style lang="less" rel="stylesheet/less">

</style>
<style lang="less" rel="stylesheet/less" scoped>
  .info {
    overflow: hidden;
    .name {
      font-size: 200rpx;
      font-weight: 300;
      color: #43474c;
      width: 40%;
      float: left;
    }
    .options {
      margin: 0 0 0 40%;
      white-space: pre-wrap;
      font-size: 28rpx;
      color: #43474c;
      line-height: 1.2;
    }
  }
</style>
